openapi: 3.0.0
info:
  title: Forum API
  description: Forum API providing features to manage questions, answers, and comments.
  version: 1.0.0
servers:
  - url: http://localhost:3333/
paths:
  /questions/{questionId}/answers:
    get:
      tags: 
        - Questions
      summary: Fetch answers to a question
      operationId: fetchQuestionAnswers
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
      responses:
        '200':
          description: Answers fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer'
    post:
      tags: 
        - Questions
      summary: Submit an answer to a question
      operationId: answerQuestion
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerQuestion'
      responses:
        '204':
          description: Answer submitted successfully
  /sessions:
    post:
      tags: 
        - Sessions
      summary: Authenticate a user and create a session
      operationId: authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateUser'
      responses:
        '200':
          description: Session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
  /answers/{answerId}/choose-as-best:
    patch:
      tags: 
        - Answers
      summary: Choose an answer as the best for a question
      operationId: chooseQuestionBestAnswer
      parameters:
        - name: answerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Answer chosen as the best successfully
  /answers/{answerId}/comments:
    get:
      tags: 
        - Answers
      summary: Fetch comments on an answer
      operationId: fetchAnswerComments
      parameters:
        - name: answerId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
      responses:
        '200':
          description: Comments fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentWithAuthor'
    post:
      tags: 
        - Answers
      summary: Comment on an answer
      operationId: commentOnAnswer
      parameters:
        - name: answerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentOnAnswer'
      responses:
        '204':
          description: Comment submitted successfully
  /questions/{questionId}/comments:
    get:
      tags: 
        - Questions
      summary: Fetch comments on a question
      operationId: fetchQuestionComments
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
      responses:
        '200':
          description: Comments fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentWithAuthor'
    post:
      tags: 
        - Questions
      summary: Comment on a question
      operationId: commentOnQuestion
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentOnQuestion'
      responses:
        '204':
          description: Comment submitted successfully
  /accounts:
    post:
      tags: 
        - Accounts
      summary: Create a new user account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
      responses:
        '201':
          description: Account created successfully
  /questions:
    post:
      tags: 
        - Questions
      summary: Create a new question
      operationId: createQuestion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuestion'
      responses:
        '204':
          description: Question created successfully
    get:
      tags: 
        - Questions
      summary: Fetch recent questions
      operationId: fetchRecentQuestions
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
      responses:
        '200':
          description: Questions fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
  /answers/comments/{id}:
    delete:
      tags: 
        - Answers
      summary: Delete a comment on an answer
      operationId: deleteAnswerComment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Comment deleted successfully
  /answers/{id}:
    delete:
      tags: 
        - Answers
      summary: Delete an answer
      operationId: deleteAnswer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Answer deleted successfully
    put:
      tags: 
        - Answers
      summary: Edit an existing answer
      operationId: editAnswer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAnswer'
      responses:
        '204':
          description: Answer edited successfully
  /questions/comments/{id}:
    delete:
      tags: 
        - Questions
      summary: Delete a comment on a question
      operationId: deleteQuestionComment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Comment deleted successfully
  /questions/{id}:
    delete:
      tags: 
        - Questions
      summary: Delete a question
      operationId: deleteQuestion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Question deleted successfully
    put:
      tags: 
        - Questions
      summary: Edit an existing question
      operationId: editQuestion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditQuestion'
      responses:
        '204':
          description: Question edited successfully
  /questions/{slug}:
    get:
      tags: 
        - Questions
      summary: Get details of a question by slug
      operationId: getQuestionBySlug
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Question details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionDetails'
  /notifications/{notificationId}/read:
    patch:
      tags: 
        - Notifications
      summary: Mark a notification as read
      operationId: readNotification
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Notification marked as read successfully
  /attachments:
    post:
      tags: 
        - Attachments
      summary: Upload an attachment
      operationId: uploadAttachment
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Attachment uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentUpload'
            
components:
  schemas:
    AnswerQuestion:
      type: object
      properties:
        content:
          type: string
        attachments:
          type: array
          items:
            type: string
    AuthenticateUser:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Session:
      type: object
      properties:
        access_token:
          type: string
    CommentOnAnswer:
      type: object
      properties:
        content:
          type: string
    CommentOnQuestion:
      type: object
      properties:
        content:
          type: string
    CreateAccount:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    CreateQuestion:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        attachments:
          type: array
          items:
            type: string
    EditAnswer:
      type: object
      properties:
        content:
          type: string
        attachments:
          type: array
          items:
            type: string
    EditQuestion:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        attachments:
          type: array
          items:
            type: string
    CommentWithAuthor:
      type: object
      properties:
        commentId:
          type: string
        content:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        author:
          $ref: '#/components/schemas/Author'
    Answer:
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    AttachmentUpload:
      type: object
      properties:
        attachmentId:
          type: string
    QuestionDetails:
      type: object
      properties:
        questionId:
          type: string
        title:
          type: string
        slug:
          type: string
        content:
          type: string
        bestAnswerId:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        author:
          $ref: '#/components/schemas/Author'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    Attachment:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        url:
          type: string
    Question:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        slug:
          type: string
        bestAnswerId:
          type: string
          nullable: true
        createdAt:
          type: string
        updatedAt:
          type: string